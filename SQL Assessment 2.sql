--CREATE DATABASE Assessment_2

--CREATE SCHEMA A2

CREATE TABLE Products (
	ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	Name NVARCHAR(100) NOT NULL UNIQUE,
	Price MONEY NOT NULL
)


CREATE TABLE Customers (
	ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	FirstName NVARCHAR(100) NOT NULL,
	LastName NVARCHAR(100) NOT NULL,
	CardNumber INT NOT NULL UNIQUE
)

CREATE TABLE Orders (
	ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	ProductID INT NOT NULL,
	CustomerID INT NOT NULL,
)

ALTER TABLE Orders ADD
	CONSTRAINT FK_PRODUCT_ID FOREIGN KEY(ProductID) REFERENCES Products(ID)

ALTER TABLE Orders ADD
	CONSTRAINT FK_CUSTOMER_ID FOREIGN KEY(CustomerID) REFERENCES Customers(ID)

ALTER TABLE Customers ADD
	CONSTRAINT UNIQUE_CARD_NUM UNIQUE(CardNumber)

INSERT INTO Products(Name, Price)
VALUES  ('Ipad', $300)

INSERT INTO Products(Name, Price)
VALUES  ('Laptop', $800)

INSERT INTO Products(Name, Price)
VALUES  ('Ipod', $80)

INSERT INTO Customers(FirstName, LastName, CardNumber)
VALUES  ('Ben', 'Mages', 123456789)

INSERT INTO Customers(FirstName, LastName, CardNumber)
VALUES  ('Allie', 'Jackson', 234567890)

INSERT INTO Customers(FirstName, LastName, CardNumber)
VALUES  ('Alex', 'Henderson', 012345678)

INSERT INTO Orders(ProductID, CustomerID)
VALUES  (1, 1)

INSERT INTO Orders(ProductID, CustomerID)
VALUES  (2, 1)

INSERT INTO Orders(ProductID, CustomerID)
VALUES  (3, 3)

-- Start assignment additions

INSERT INTO Products(Name, Price)
VALUES  ('Iphone', $200)

INSERT INTO Customers(FirstName, LastName, CardNumber)
VALUES  ('Tina', 'Smith', 214365879)

INSERT INTO Orders(ProductID, CustomerID) -- I'm using identity increment for ID, but somehow it skipped 4 and went to 5
VALUES  (5, 4)

INSERT INTO Orders(ProductID, CustomerID)
VALUES  (6, 4)

INSERT INTO Orders(ProductID, CustomerID)
VALUES  (5, 3)

-- Report all orders from Tina Smith
SELECT Ord.ProductID, Ord.ID
FROM Orders AS Ord
INNER JOIN Customers AS Cu ON Cu.ID = Ord.CustomerID
WHERE Cu.FirstName = 'Tina' AND Cu.LastName = 'Smith'

-- Report all revenue generated by sales of Iphone
SELECT COUNT(O.ID) * P.Price
FROM Orders AS O
INNER JOIN Products AS P ON P.ID = O.ProductID
WHERE P.Name = 'Iphone'
GROUP BY P.Price

-- Increase price of Iphone to $250
UPDATE Products SET Price = $250 WHERE Name = 'Iphone'

